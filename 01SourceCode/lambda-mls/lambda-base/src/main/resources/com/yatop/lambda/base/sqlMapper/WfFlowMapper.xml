<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yatop.lambda.base.mapper.WfFlowMapper">
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.WfFlow">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="FLOW_ID" jdbcType="BIGINT" property="flowId" />
    <result column="FLOW_NAME" jdbcType="VARCHAR" property="flowName" />
    <result column="OWNER_PROJECT_ID" jdbcType="BIGINT" property="ownerProjectId" />
    <result column="OWNER_EXPERIMENT_ID" jdbcType="BIGINT" property="ownerExperimentId" />
    <result column="LOCK_STATE" jdbcType="INTEGER" property="lockState" />
    <result column="LOCK_MSG" jdbcType="VARCHAR" property="lockMsg" />
    <result column="LAST_SNAPSHOT_ID" jdbcType="BIGINT" property="lastSnapshotId" />
    <result column="NEXT_SNAPSHOT_VERSION" jdbcType="BIGINT" property="nextSnapshotVersion" />
    <result column="NODE_COUNT" jdbcType="BIGINT" property="nodeCount" />
    <result column="NEXT_DELETE_SEQUENCE" jdbcType="BIGINT" property="nextDeleteSequence" />
    <result column="LAST_JOB_ID" jdbcType="BIGINT" property="lastJobId" />
    <result column="FLOW_STATE" jdbcType="INTEGER" property="flowState" />
    <result column="SUMMARY" jdbcType="VARCHAR" property="summary" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="LAST_UPDATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="LAST_UPDATE_OPER" jdbcType="VARCHAR" property="lastUpdateOper" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_OPER" jdbcType="VARCHAR" property="createOper" />
    <result column="VERSION" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
    -->
    FLOW_ID, FLOW_NAME, OWNER_PROJECT_ID, OWNER_EXPERIMENT_ID, LOCK_STATE, LOCK_MSG, 
    LAST_SNAPSHOT_ID, NEXT_SNAPSHOT_VERSION, NODE_COUNT, NEXT_DELETE_SEQUENCE, LAST_JOB_ID, 
    FLOW_STATE, SUMMARY, DESCRIPTION, STATUS, LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
    CREATE_OPER, VERSION
  </sql>
  <select id="selectByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample">
    <!--
      WARNING - @mbggenerated
    -->
    delete from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update wf_flow
    <set>
      <if test="record.flowId != null">
        FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.flowName != null">
        FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerProjectId != null">
        OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerExperimentId != null">
        OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="record.lockState != null">
        LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      </if>
      <if test="record.lockMsg != null">
        LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSnapshotId != null">
        LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="record.nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="record.nodeCount != null">
        NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      </if>
      <if test="record.nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="record.lastJobId != null">
        LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      </if>
      <if test="record.flowState != null">
        FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null">
        SUMMARY = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null">
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null">
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update wf_flow
    set FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      SUMMARY = #{record.summary,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.WfFlow">
    <id column="FLOW_ID" jdbcType="BIGINT" property="flowId" />
    <result column="FLOW_NAME" jdbcType="VARCHAR" property="flowName" />
    <result column="OWNER_PROJECT_ID" jdbcType="BIGINT" property="ownerProjectId" />
    <result column="OWNER_EXPERIMENT_ID" jdbcType="BIGINT" property="ownerExperimentId" />
    <result column="LOCK_STATE" jdbcType="INTEGER" property="lockState" />
    <result column="LOCK_MSG" jdbcType="VARCHAR" property="lockMsg" />
    <result column="LAST_SNAPSHOT_ID" jdbcType="BIGINT" property="lastSnapshotId" />
    <result column="NEXT_SNAPSHOT_VERSION" jdbcType="BIGINT" property="nextSnapshotVersion" />
    <result column="NODE_COUNT" jdbcType="BIGINT" property="nodeCount" />
    <result column="NEXT_DELETE_SEQUENCE" jdbcType="BIGINT" property="nextDeleteSequence" />
    <result column="LAST_JOB_ID" jdbcType="BIGINT" property="lastJobId" />
    <result column="FLOW_STATE" jdbcType="INTEGER" property="flowState" />
    <result column="SUMMARY" jdbcType="VARCHAR" property="summary" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="LAST_UPDATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="LAST_UPDATE_OPER" jdbcType="VARCHAR" property="lastUpdateOper" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_OPER" jdbcType="VARCHAR" property="createOper" />
    <result column="VERSION" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FLOW_ID, FLOW_NAME, OWNER_PROJECT_ID, OWNER_EXPERIMENT_ID, LOCK_STATE, LOCK_MSG, 
    LAST_SNAPSHOT_ID, NEXT_SNAPSHOT_VERSION, NODE_COUNT, NEXT_DELETE_SEQUENCE, LAST_JOB_ID, 
    FLOW_STATE, SUMMARY, DESCRIPTION, STATUS, LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
    CREATE_OPER, VERSION
  </sql>
  <select id="selectByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wf_flow
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wf_flow
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample">
    delete from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yatop.lambda.base.model.WfFlow">
    insert into wf_flow (FLOW_ID, FLOW_NAME, OWNER_PROJECT_ID, 
      OWNER_EXPERIMENT_ID, LOCK_STATE, LOCK_MSG, 
      LAST_SNAPSHOT_ID, NEXT_SNAPSHOT_VERSION, NODE_COUNT, 
      NEXT_DELETE_SEQUENCE, LAST_JOB_ID, FLOW_STATE, 
      SUMMARY, DESCRIPTION, STATUS, 
      LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
      CREATE_OPER, VERSION)
    values (#{flowId,jdbcType=BIGINT}, #{flowName,jdbcType=VARCHAR}, #{ownerProjectId,jdbcType=BIGINT}, 
      #{ownerExperimentId,jdbcType=BIGINT}, #{lockState,jdbcType=INTEGER}, #{lockMsg,jdbcType=VARCHAR}, 
      #{lastSnapshotId,jdbcType=BIGINT}, #{nextSnapshotVersion,jdbcType=BIGINT}, #{nodeCount,jdbcType=BIGINT}, 
      #{nextDeleteSequence,jdbcType=BIGINT}, #{lastJobId,jdbcType=BIGINT}, #{flowState,jdbcType=INTEGER}, 
      #{summary,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{lastUpdateOper,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createOper,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yatop.lambda.base.model.WfFlow">
    insert into wf_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        FLOW_ID,
      </if>
      <if test="flowName != null">
        FLOW_NAME,
      </if>
      <if test="ownerProjectId != null">
        OWNER_PROJECT_ID,
      </if>
      <if test="ownerExperimentId != null">
        OWNER_EXPERIMENT_ID,
      </if>
      <if test="lockState != null">
        LOCK_STATE,
      </if>
      <if test="lockMsg != null">
        LOCK_MSG,
      </if>
      <if test="lastSnapshotId != null">
        LAST_SNAPSHOT_ID,
      </if>
      <if test="nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION,
      </if>
      <if test="nodeCount != null">
        NODE_COUNT,
      </if>
      <if test="nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE,
      </if>
      <if test="lastJobId != null">
        LAST_JOB_ID,
      </if>
      <if test="flowState != null">
        FLOW_STATE,
      </if>
      <if test="summary != null">
        SUMMARY,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME,
      </if>
      <if test="lastUpdateOper != null">
        LAST_UPDATE_OPER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createOper != null">
        CREATE_OPER,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        #{flowId,jdbcType=BIGINT},
      </if>
      <if test="flowName != null">
        #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="ownerProjectId != null">
        #{ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="ownerExperimentId != null">
        #{ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="lockState != null">
        #{lockState,jdbcType=INTEGER},
      </if>
      <if test="lockMsg != null">
        #{lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="lastSnapshotId != null">
        #{lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="nextSnapshotVersion != null">
        #{nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="nodeCount != null">
        #{nodeCount,jdbcType=BIGINT},
      </if>
      <if test="nextDeleteSequence != null">
        #{nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="lastJobId != null">
        #{lastJobId,jdbcType=BIGINT},
      </if>
      <if test="flowState != null">
        #{flowState,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateOper != null">
        #{lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOper != null">
        #{createOper,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultType="java.lang.Integer">
    select count(*) from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wf_flow
    <set>
      <if test="record.flowId != null">
        FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.flowName != null">
        FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerProjectId != null">
        OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerExperimentId != null">
        OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="record.lockState != null">
        LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      </if>
      <if test="record.lockMsg != null">
        LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSnapshotId != null">
        LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="record.nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="record.nodeCount != null">
        NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      </if>
      <if test="record.nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="record.lastJobId != null">
        LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      </if>
      <if test="record.flowState != null">
        FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null">
        SUMMARY = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null">
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null">
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wf_flow
    set FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      SUMMARY = #{record.summary,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yatop.lambda.base.model.WfFlow">
    update wf_flow
    <set>
      <if test="flowName != null">
        FLOW_NAME = #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="ownerProjectId != null">
        OWNER_PROJECT_ID = #{ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="ownerExperimentId != null">
        OWNER_EXPERIMENT_ID = #{ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="lockState != null">
        LOCK_STATE = #{lockState,jdbcType=INTEGER},
      </if>
      <if test="lockMsg != null">
        LOCK_MSG = #{lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="lastSnapshotId != null">
        LAST_SNAPSHOT_ID = #{lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION = #{nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="nodeCount != null">
        NODE_COUNT = #{nodeCount,jdbcType=BIGINT},
      </if>
      <if test="nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE = #{nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="lastJobId != null">
        LAST_JOB_ID = #{lastJobId,jdbcType=BIGINT},
      </if>
      <if test="flowState != null">
        FLOW_STATE = #{flowState,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        SUMMARY = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateOper != null">
        LAST_UPDATE_OPER = #{lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOper != null">
        CREATE_OPER = #{createOper,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yatop.lambda.base.model.WfFlow">
    update wf_flow
    set FLOW_NAME = #{flowName,jdbcType=VARCHAR},
      OWNER_PROJECT_ID = #{ownerProjectId,jdbcType=BIGINT},
      OWNER_EXPERIMENT_ID = #{ownerExperimentId,jdbcType=BIGINT},
      LOCK_STATE = #{lockState,jdbcType=INTEGER},
      LOCK_MSG = #{lockMsg,jdbcType=VARCHAR},
      LAST_SNAPSHOT_ID = #{lastSnapshotId,jdbcType=BIGINT},
      NEXT_SNAPSHOT_VERSION = #{nextSnapshotVersion,jdbcType=BIGINT},
      NODE_COUNT = #{nodeCount,jdbcType=BIGINT},
      NEXT_DELETE_SEQUENCE = #{nextDeleteSequence,jdbcType=BIGINT},
      LAST_JOB_ID = #{lastJobId,jdbcType=BIGINT},
      FLOW_STATE = #{flowState,jdbcType=INTEGER},
      SUMMARY = #{summary,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{createOper,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=BIGINT}
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </update>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <resultMap id="BaseResultMap" type="com.yatop.lambda.base.model.WfFlow">
    <id column="FLOW_ID" jdbcType="BIGINT" property="flowId" />
    <result column="FLOW_NAME" jdbcType="VARCHAR" property="flowName" />
    <result column="OWNER_PROJECT_ID" jdbcType="BIGINT" property="ownerProjectId" />
    <result column="OWNER_EXPERIMENT_ID" jdbcType="BIGINT" property="ownerExperimentId" />
    <result column="LOCK_STATE" jdbcType="INTEGER" property="lockState" />
    <result column="LOCK_MSG" jdbcType="VARCHAR" property="lockMsg" />
    <result column="LAST_SNAPSHOT_ID" jdbcType="BIGINT" property="lastSnapshotId" />
    <result column="NEXT_SNAPSHOT_VERSION" jdbcType="BIGINT" property="nextSnapshotVersion" />
    <result column="NODE_COUNT" jdbcType="BIGINT" property="nodeCount" />
    <result column="NEXT_DELETE_SEQUENCE" jdbcType="BIGINT" property="nextDeleteSequence" />
    <result column="LAST_JOB_ID" jdbcType="BIGINT" property="lastJobId" />
    <result column="FLOW_STATE" jdbcType="INTEGER" property="flowState" />
    <result column="SUMMARY" jdbcType="VARCHAR" property="summary" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="STATUS" jdbcType="INTEGER" property="status" />
    <result column="LAST_UPDATE_TIME" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="LAST_UPDATE_OPER" jdbcType="VARCHAR" property="lastUpdateOper" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_OPER" jdbcType="VARCHAR" property="createOper" />
    <result column="VERSION" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FLOW_ID, FLOW_NAME, OWNER_PROJECT_ID, OWNER_EXPERIMENT_ID, LOCK_STATE, LOCK_MSG, 
    LAST_SNAPSHOT_ID, NEXT_SNAPSHOT_VERSION, NODE_COUNT, NEXT_DELETE_SEQUENCE, LAST_JOB_ID, 
    FLOW_STATE, SUMMARY, DESCRIPTION, STATUS, LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
    CREATE_OPER, VERSION
  </sql>
  <select id="selectByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wf_flow
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wf_flow
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample">
    delete from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yatop.lambda.base.model.WfFlow">
    insert into wf_flow (FLOW_ID, FLOW_NAME, OWNER_PROJECT_ID, 
      OWNER_EXPERIMENT_ID, LOCK_STATE, LOCK_MSG, 
      LAST_SNAPSHOT_ID, NEXT_SNAPSHOT_VERSION, NODE_COUNT, 
      NEXT_DELETE_SEQUENCE, LAST_JOB_ID, FLOW_STATE, 
      SUMMARY, DESCRIPTION, STATUS, 
      LAST_UPDATE_TIME, LAST_UPDATE_OPER, CREATE_TIME, 
      CREATE_OPER, VERSION)
    values (#{flowId,jdbcType=BIGINT}, #{flowName,jdbcType=VARCHAR}, #{ownerProjectId,jdbcType=BIGINT}, 
      #{ownerExperimentId,jdbcType=BIGINT}, #{lockState,jdbcType=INTEGER}, #{lockMsg,jdbcType=VARCHAR}, 
      #{lastSnapshotId,jdbcType=BIGINT}, #{nextSnapshotVersion,jdbcType=BIGINT}, #{nodeCount,jdbcType=BIGINT}, 
      #{nextDeleteSequence,jdbcType=BIGINT}, #{lastJobId,jdbcType=BIGINT}, #{flowState,jdbcType=INTEGER}, 
      #{summary,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{lastUpdateOper,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createOper,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yatop.lambda.base.model.WfFlow">
    insert into wf_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        FLOW_ID,
      </if>
      <if test="flowName != null">
        FLOW_NAME,
      </if>
      <if test="ownerProjectId != null">
        OWNER_PROJECT_ID,
      </if>
      <if test="ownerExperimentId != null">
        OWNER_EXPERIMENT_ID,
      </if>
      <if test="lockState != null">
        LOCK_STATE,
      </if>
      <if test="lockMsg != null">
        LOCK_MSG,
      </if>
      <if test="lastSnapshotId != null">
        LAST_SNAPSHOT_ID,
      </if>
      <if test="nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION,
      </if>
      <if test="nodeCount != null">
        NODE_COUNT,
      </if>
      <if test="nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE,
      </if>
      <if test="lastJobId != null">
        LAST_JOB_ID,
      </if>
      <if test="flowState != null">
        FLOW_STATE,
      </if>
      <if test="summary != null">
        SUMMARY,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME,
      </if>
      <if test="lastUpdateOper != null">
        LAST_UPDATE_OPER,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createOper != null">
        CREATE_OPER,
      </if>
      <if test="version != null">
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowId != null">
        #{flowId,jdbcType=BIGINT},
      </if>
      <if test="flowName != null">
        #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="ownerProjectId != null">
        #{ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="ownerExperimentId != null">
        #{ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="lockState != null">
        #{lockState,jdbcType=INTEGER},
      </if>
      <if test="lockMsg != null">
        #{lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="lastSnapshotId != null">
        #{lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="nextSnapshotVersion != null">
        #{nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="nodeCount != null">
        #{nodeCount,jdbcType=BIGINT},
      </if>
      <if test="nextDeleteSequence != null">
        #{nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="lastJobId != null">
        #{lastJobId,jdbcType=BIGINT},
      </if>
      <if test="flowState != null">
        #{flowState,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateOper != null">
        #{lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOper != null">
        #{createOper,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yatop.lambda.base.model.WfFlowExample" resultType="java.lang.Integer">
    select count(*) from wf_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update wf_flow
    <set>
      <if test="record.flowId != null">
        FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      </if>
      <if test="record.flowName != null">
        FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerProjectId != null">
        OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerExperimentId != null">
        OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="record.lockState != null">
        LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      </if>
      <if test="record.lockMsg != null">
        LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.lastSnapshotId != null">
        LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="record.nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="record.nodeCount != null">
        NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      </if>
      <if test="record.nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="record.lastJobId != null">
        LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      </if>
      <if test="record.flowState != null">
        FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null">
        SUMMARY = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateOper != null">
        LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOper != null">
        CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        VERSION = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update wf_flow
    set FLOW_ID = #{record.flowId,jdbcType=BIGINT},
      FLOW_NAME = #{record.flowName,jdbcType=VARCHAR},
      OWNER_PROJECT_ID = #{record.ownerProjectId,jdbcType=BIGINT},
      OWNER_EXPERIMENT_ID = #{record.ownerExperimentId,jdbcType=BIGINT},
      LOCK_STATE = #{record.lockState,jdbcType=INTEGER},
      LOCK_MSG = #{record.lockMsg,jdbcType=VARCHAR},
      LAST_SNAPSHOT_ID = #{record.lastSnapshotId,jdbcType=BIGINT},
      NEXT_SNAPSHOT_VERSION = #{record.nextSnapshotVersion,jdbcType=BIGINT},
      NODE_COUNT = #{record.nodeCount,jdbcType=BIGINT},
      NEXT_DELETE_SEQUENCE = #{record.nextDeleteSequence,jdbcType=BIGINT},
      LAST_JOB_ID = #{record.lastJobId,jdbcType=BIGINT},
      FLOW_STATE = #{record.flowState,jdbcType=INTEGER},
      SUMMARY = #{record.summary,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{record.lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{record.createOper,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yatop.lambda.base.model.WfFlow">
    update wf_flow
    <set>
      <if test="flowName != null">
        FLOW_NAME = #{flowName,jdbcType=VARCHAR},
      </if>
      <if test="ownerProjectId != null">
        OWNER_PROJECT_ID = #{ownerProjectId,jdbcType=BIGINT},
      </if>
      <if test="ownerExperimentId != null">
        OWNER_EXPERIMENT_ID = #{ownerExperimentId,jdbcType=BIGINT},
      </if>
      <if test="lockState != null">
        LOCK_STATE = #{lockState,jdbcType=INTEGER},
      </if>
      <if test="lockMsg != null">
        LOCK_MSG = #{lockMsg,jdbcType=VARCHAR},
      </if>
      <if test="lastSnapshotId != null">
        LAST_SNAPSHOT_ID = #{lastSnapshotId,jdbcType=BIGINT},
      </if>
      <if test="nextSnapshotVersion != null">
        NEXT_SNAPSHOT_VERSION = #{nextSnapshotVersion,jdbcType=BIGINT},
      </if>
      <if test="nodeCount != null">
        NODE_COUNT = #{nodeCount,jdbcType=BIGINT},
      </if>
      <if test="nextDeleteSequence != null">
        NEXT_DELETE_SEQUENCE = #{nextDeleteSequence,jdbcType=BIGINT},
      </if>
      <if test="lastJobId != null">
        LAST_JOB_ID = #{lastJobId,jdbcType=BIGINT},
      </if>
      <if test="flowState != null">
        FLOW_STATE = #{flowState,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        SUMMARY = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateOper != null">
        LAST_UPDATE_OPER = #{lastUpdateOper,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOper != null">
        CREATE_OPER = #{createOper,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        VERSION = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yatop.lambda.base.model.WfFlow">
    update wf_flow
    set FLOW_NAME = #{flowName,jdbcType=VARCHAR},
      OWNER_PROJECT_ID = #{ownerProjectId,jdbcType=BIGINT},
      OWNER_EXPERIMENT_ID = #{ownerExperimentId,jdbcType=BIGINT},
      LOCK_STATE = #{lockState,jdbcType=INTEGER},
      LOCK_MSG = #{lockMsg,jdbcType=VARCHAR},
      LAST_SNAPSHOT_ID = #{lastSnapshotId,jdbcType=BIGINT},
      NEXT_SNAPSHOT_VERSION = #{nextSnapshotVersion,jdbcType=BIGINT},
      NODE_COUNT = #{nodeCount,jdbcType=BIGINT},
      NEXT_DELETE_SEQUENCE = #{nextDeleteSequence,jdbcType=BIGINT},
      LAST_JOB_ID = #{lastJobId,jdbcType=BIGINT},
      FLOW_STATE = #{flowState,jdbcType=INTEGER},
      SUMMARY = #{summary,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      LAST_UPDATE_TIME = #{lastUpdateTime,jdbcType=TIMESTAMP},
      LAST_UPDATE_OPER = #{lastUpdateOper,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_OPER = #{createOper,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=BIGINT}
    where FLOW_ID = #{flowId,jdbcType=BIGINT}
  </update>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
  <sql id="MysqlSuffix">
    <if test="page != null">
      <![CDATA[ limit #{page.begin} , #{page.length} ]]>
    </if>
  </sql>
</mapper>